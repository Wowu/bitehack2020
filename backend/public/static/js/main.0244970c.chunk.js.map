{"version":3,"sources":["components/RoomCreation.js","components/Whiteboard.js","components/Card.js","components/Room.js","App.js","serviceWorker.js","index.js","assets/master_plan.svg","assets/kanban.png"],"names":["RoomCreation","useState","brainstormTopic","setBrainstormTopic","history","useHistory","className","style","maxWidth","alt","src","MasterPlanImage","onSubmit","e","a","async","preventDefault","axios","post","topic","response","roomId","data","id","masterOf","JSON","parse","window","localStorage","getItem","setItem","stringify","push","console","error","type","value","onChange","target","placeholder","borderTopLeftRadius","borderBottomLeftRadius","svgElement","document","createElementNS","measureString","ms","ruler","createElement","body","append","string","innerText","getBoundingClientRect","width","createNewWhiteBoard","height","offsetX","offsetY","scale","svg","d3","node","classList","add","attr","addEventListener","innerWidth","g","nodes","links","onNodeRemoved","simulation","force","strength","distance","alphaTarget","on","d","x","y","call","active","restart","fx","fy","link","source","selectAll","updateTransforms","exit","remove","enter","text","innerHTML","idea","rect","setAttribute","exports","merge","alpha","mousedown","movementX","movementY","deltaY","index","findIndex","splice","callback","connect","component","ref","div","Card","master","onUpvote","mode","onRemove","score","onClick","Room","props","match","params","indexOf","createWhiteboard","innerHeight","removeIdea","removeFromWhiteboard","addToWhiteboard","whiteboard","state","ideas","ideaText","loading","userIdeaCount","socket","io","setState","forEach","log","filter","newIdea","map","emit","userName","this","ideaId","publishIdea","newMode","propName","change","changeTopic","bind","validate","name","checked","handleModeChange","key","upvote","handleFormSubmit","maxLength","widht","KanbanImg","Component","withRouter","App","path","Whiteboard","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module"],"mappings":"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","file":"static/js/main.0244970c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport MasterPlanImage from \"../assets/master_plan.svg\";\n\nconst RoomCreation = () => {\n  const [brainstormTopic, setBrainstormTopic] = useState(\"\");\n  const history = useHistory();\n\n  const handleCreateRoom = async e => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post(\"/create-room\", {\n        topic: brainstormTopic === \"\" ? \"Untitled brainstorm\" : brainstormTopic\n      });\n\n      const roomId = response.data.id;\n\n      const masterOf =\n        JSON.parse(window.localStorage.getItem(\"masterOf\")) || [];\n\n      window.localStorage.setItem(\n        \"masterOf\",\n        JSON.stringify([roomId, ...masterOf])\n      );\n\n      history.push(`/room/${roomId}`);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row my-5\">\n        <div className=\"col\">\n          <div className=\"d-flex justify-content-center align-items-center\">\n            <img\n              style={{ maxWidth: 400 }}\n              alt=\"Master Plan\"\n              src={MasterPlanImage}\n            />\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"my-5\">\n            <h1>MindExplode</h1>\n            <h3>Better brainstorming for everyone.</h3>\n          </div>\n        </div>\n      </div>\n      <div className=\"row justify-content-center\">\n        <div className=\"col-md-6\">\n          <form onSubmit={handleCreateRoom}>\n            <div className=\"input-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={brainstormTopic}\n                onChange={e => setBrainstormTopic(e.target.value)}\n                placeholder=\"What problem do you want to solve?\"\n                style={{\n                  borderTopLeftRadius: \"1.078em\",\n                  borderBottomLeftRadius: \"1.078em\"\n                }}\n              />\n\n              <div className=\"input-group-append\">\n                <button className=\"btn btn-primary\">Create room</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div className=\"row mt-5\">\n        <div className=\"col mt-5\">\n          <div className=\"text-center mt-5\">\n            Created by Random Dudes at BiteHack 2020\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RoomCreation;\n","import * as d3 from \"d3\";\nimport React from \"react\";\n\nconst svgElement = type =>\n  document.createElementNS(\"http://www.w3.org/2000/svg\", type);\nconst measureString = (window.ms = (() => {\n  const ruler = document.createElement(\"span\");\n  ruler.id = \"ruler\";\n  document.body.append(ruler);\n  return string => {\n    ruler.innerText = string;\n    return ruler.getBoundingClientRect().width;\n  };\n})());\n\nfunction createNewWhiteBoard(width, height) {\n  function drag() {\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n\n    return d3\n      .drag()\n      .on(\"start\", dragstarted)\n      .on(\"drag\", dragged)\n      .on(\"end\", dragended);\n  }\n  let offsetX = 0;\n  let offsetY = 0;\n  let scale = 1;\n\n  const svg = d3.create(\"svg\");\n  svg.node().classList.add(\"whiteboard\");\n  svg.attr(\"width\", width);\n  svg.attr(\"height\", height);\n  svg.attr(\"viewBox\", [0, 0, width, height]);\n  window.addEventListener(\"resize\", () => {\n    width = window.innerWidth;\n    svg.attr(\"width\", width);\n    svg.attr(\"viewBox\", [0, 0, width, height]);\n    g.attr(\n      \"transform\",\n      `translate(${width / 2 + offsetX}, ${height / 2 + offsetY})`\n    );\n  });\n\n  let nodes = [];\n  let links = [];\n  let onNodeRemoved = () => {};\n\n  const simulation = d3\n    .forceSimulation(nodes)\n    .force(\"charge\", d3.forceManyBody().strength(-1000))\n    .force(\"link\", d3.forceLink(links).distance(200))\n    .force(\"x\", d3.forceX())\n    .force(\"y\", d3.forceY())\n    .alphaTarget(1)\n    .on(\"tick\", ticked);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n  let link = g\n    .append(\"g\")\n    .attr(\"stroke\", \"#000\")\n    .attr(\"stroke-width\", 1.5)\n    .selectAll(\".link\");\n  let node = g\n    .append(\"g\")\n    .attr(\"stroke\", \"#fff\")\n    .attr(\"stroke-width\", 1.5)\n    .selectAll(\".node\");\n\n  restart();\n\n  function updateTransforms() {\n    g.attr(\n      \"transform\",\n      `translate(${width / 2 + offsetX}, ${height / 2 +\n        offsetY}), scale(${scale})`\n    );\n  }\n\n  function restart() {\n    // Apply the general update pattern to the nodes.\n    node = node.data(nodes, d => d.id);\n    node.exit().remove();\n\n    node = node\n      .enter()\n      .append(d => {\n        const g = svgElement(\"g\");\n        const text = svgElement(\"text\");\n        text.innerHTML = d.idea;\n        const rect = svgElement(\"rect\");\n        rect.setAttribute(\"width\", measureString(d.idea) + 12);\n        g.append(rect);\n        g.append(text);\n        // remove nodes\n        g.addEventListener(\"contextmenu\", e => {\n          e.preventDefault();\n          exports.remove(d);\n          onNodeRemoved({ id: d.id, idea: d.idea });\n        });\n        return g;\n      })\n      .merge(node);\n\n    // Apply the general update pattern to the links.\n    link = link.data(links, function(d) {\n      return d.source.id + \"-\" + d.target.id;\n    });\n    link.exit().remove();\n    link = link\n      .enter()\n      .append(\"line\")\n      .merge(link);\n\n    // Update and restart the simulation.\n    simulation.nodes(nodes);\n    simulation.force(\"link\").links(links);\n    simulation.alpha(1).restart();\n  }\n  let mousedown = false;\n  svg.node().addEventListener(\"mousedown\", e => {\n    mousedown = true;\n  });\n  window.addEventListener(\"mouseup\", e => {\n    mousedown = false;\n  });\n  window.addEventListener(\"mousemove\", e => {\n    if (mousedown) {\n      offsetX += e.movementX;\n      offsetY += e.movementY;\n      updateTransforms();\n    }\n  });\n  svg.node().addEventListener(\"mousewheel\", e => {\n    scale -= e.deltaY / 500;\n    updateTransforms();\n  });\n\n  function ticked() {\n    node.attr(\"transform\", d => `translate(${d.x}, ${d.y})`).call(drag());\n\n    link\n      .attr(\"x1\", d => d.source.x)\n      .attr(\"y1\", d => d.source.y)\n      .attr(\"x2\", d => d.target.x)\n      .attr(\"y2\", d => d.target.y);\n  }\n\n  const exports = {\n    add(node) {\n      nodes.push(node);\n      restart();\n    },\n    remove(node) {\n      const index = nodes.findIndex(x => x.id === node.id);\n      if (index !== -1) {\n        nodes.splice(index, 1);\n        restart();\n      }\n    },\n    onNodeRemoved(callback) {\n      onNodeRemoved = callback;\n    },\n    connect(source, target) {\n      links.push({ source, target });\n      restart();\n    },\n    component: <div ref={div => div && div.append(svg.node())}> </div>\n  };\n  return exports;\n}\n\nexport default createNewWhiteBoard;\n","import React from \"react\";\n\nconst Card = ({ idea, master, onUpvote, mode, onRemove }) => (\n  <div className=\"card mb-2\">\n    <div className=\"card-body \">\n      <div className=\"row\">\n        <div className=\"col-10\">{idea.idea}</div>\n        <div className=\"col-2\">{idea.score}</div>\n        {master && <button onClick={onRemove}>X</button>}\n        {mode === \"voting\" && <button onClick={onUpvote}>/\\</button>}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport io from \"socket.io-client\";\nimport { withRouter } from \"react-router-dom\";\nimport { RIEInput } from \"riek\";\nimport createWhiteboard from \"./Whiteboard\";\n\nimport Card from \"./Card\";\nimport KanbanImg from \"../assets/kanban.png\";\n\nclass Room extends Component {\n  constructor(props) {\n    super(props);\n\n    this.roomId = props.match.params.id;\n\n    this.masterOf = JSON.parse(window.localStorage.getItem(\"masterOf\"));\n\n    this.master = this.masterOf && this.masterOf.indexOf(this.roomId) !== -1;\n\n    const { component, add, remove, onNodeRemoved } = createWhiteboard(\n      window.innerWidth,\n      window.innerHeight - 200\n    );\n    onNodeRemoved(node => {\n      this.removeIdea(node);\n    });\n\n    this.removeFromWhiteboard = remove;\n    this.addToWhiteboard = add;\n    this.whiteboard = component;\n    this.state = {\n      ideas: [],\n      ideaText: \"\",\n      topic: \"\",\n      mode: \"insert\",\n      loading: true,\n      userIdeaCount: 0\n    };\n\n    this.socket = io(\"http://localhost:5000\");\n\n    this.socket.on(\"roomInfo\", ({ ideas, topic, mode }) => {\n      this.setState({ ideas, topic, mode, loading: false });\n\n      ideas.forEach(this.addToWhiteboard);\n    });\n\n    this.socket.on(\"pushNewIdeaToUsers\", idea => {\n      this.setState({\n        ideas: [...this.state.ideas, idea]\n      });\n      this.addToWhiteboard(idea);\n      console.log(idea);\n    });\n\n    this.socket.on(\"roomModeChanged\", mode => {\n      console.log(mode);\n      this.setState({ mode });\n    });\n\n    this.socket.on(\"pushDeletedIdeaToUsers\", idea => {\n      this.setState({\n        ideas: this.state.ideas.filter(({ id }) => id !== idea.id)\n      });\n      this.removeFromWhiteboard(idea);\n    });\n\n    this.socket.on(\"topicChanged\", topic => {\n      this.setState({ topic });\n    });\n\n    this.socket.on(\"roomNotFound\", data => {\n      console.error(\"Room not found\");\n      this.props.history.push(\"/\");\n    });\n\n    this.socket.on(\"ideaUpvoted\", newIdea => {\n      this.setState({\n        ideas: this.state.ideas.map(idea =>\n          idea.id === newIdea.id ? newIdea : idea\n        )\n      });\n    });\n\n    this.socket.emit(\"connectToRoom\", {\n      roomId: this.roomId,\n      userName: \"userName\"\n    });\n  }\n\n  removeIdea(idea) {\n    this.socket.emit(\"removeIdea\", {\n      roomId: this.roomId,\n      ideaId: idea.id\n    });\n  }\n\n  publishIdea() {\n    if (this.state.ideaText === \"\") return;\n\n    this.socket.emit(\"newIdea\", {\n      roomId: this.roomId,\n      idea: this.state.ideaText\n    });\n\n    this.setState({\n      ideaText: \"\",\n      userIdeaCount: this.state.userIdeaCount + 1\n    });\n  }\n\n  changeTopic({ topic }) {\n    this.socket.emit(\"changeTopic\", { roomId: this.roomId, topic });\n  }\n\n  handleFormSubmit(e) {\n    e.preventDefault();\n    this.publishIdea();\n  }\n\n  handleModeChange(e) {\n    this.socket.emit(\"changeRoomMode\", {\n      roomId: this.roomId,\n      newMode: e.target.value\n    });\n  }\n\n  upvote(idea) {\n    this.socket.emit(\"upvoteIdea\", { roomId: this.roomId, ideaId: idea.id });\n  }\n\n  render() {\n    const { ideas, ideaText, topic, mode, loading } = this.state;\n    const master = this.master;\n\n    return (\n      <>\n        {loading ? (\n          <div>Loading...</div>\n        ) : (\n          <div>\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col\">\n                  <h3 className=\"mt-4 text-center\">\n                    {master ? (\n                      <RIEInput\n                        value={topic}\n                        propName=\"topic\"\n                        change={this.changeTopic.bind(this)}\n                        validate={string => string !== \"\"}\n                      />\n                    ) : (\n                      topic\n                    )}\n                  </h3>\n\n                  {master && (\n                    <div className=\"text-center\">\n                      <div className=\"form-check form-check-inline\">\n                        Select mode:\n                      </div>\n\n                      <div className=\"form-check form-check-inline\">\n                        <label>\n                          <input\n                            type=\"radio\"\n                            className=\"mr-1\"\n                            name=\"mode\"\n                            value=\"insert\"\n                            checked={mode === \"insert\"}\n                            onChange={this.handleModeChange.bind(this)}\n                          />\n                          Brainstorm\n                        </label>\n                      </div>\n                      <div className=\"form-check form-check-inline\">\n                        <label className=\"form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"mr-1\"\n                            name=\"mode\"\n                            value=\"voting\"\n                            checked={mode === \"voting\"}\n                            onChange={this.handleModeChange.bind(this)}\n                          />\n                          Voting\n                        </label>\n                      </div>\n                      <div className=\"form-check form-check-inline\">\n                        <label className=\"form-check-inline\">\n                          <input\n                            type=\"radio\"\n                            className=\"mr-1\"\n                            name=\"mode\"\n                            value=\"block\"\n                            checked={mode === \"block\"}\n                            onChange={this.handleModeChange.bind(this)}\n                          />\n                          Conclusions\n                        </label>\n                      </div>\n                    </div>\n                  )}\n\n                  {(mode === \"voting\" || (master && mode === \"block\")) && (\n                    <div>\n                      {mode === \"voting\" && (\n                        <h5 className=\"text-center\">\n                          Now vote for 3 best ideas\n                        </h5>\n                      )}\n                      {ideas.map(idea => (\n                        <Card\n                          key={idea.id}\n                          idea={idea}\n                          onRemove={() => this.removeIdea(idea)}\n                          onUpvote={() => this.upvote(idea)}\n                          mode={mode}\n                          master={master}\n                        />\n                      ))}\n                    </div>\n                  )}\n\n                  {mode === \"insert\" && (\n                    <form\n                      className=\"mt-4\"\n                      onSubmit={this.handleFormSubmit.bind(this)}\n                    >\n                      <div className=\"input-group\">\n                        <input\n                          className=\"form-control\"\n                          type=\"text\"\n                          maxLength={80}\n                          placeholder=\"Your idea...\"\n                          value={ideaText}\n                          onChange={e =>\n                            this.setState({ ideaText: e.target.value })\n                          }\n                          style={{\n                            borderTopLeftRadius: \"1.078em\",\n                            borderBottomLeftRadius: \"1.078em\"\n                          }}\n                        />\n\n                        <div className=\"input-group-append\">\n                          <button className=\"btn btn-primary\">Send!</button>\n                        </div>\n                      </div>\n                      <div className=\"text-muted text-center mt-1\">\n                        {this.state.userIdeaCount > 0 && (\n                          <>\n                            You sent {this.state.userIdeaCount} idea\n                            {this.state.userIdeaCount > 1 && \"s\"}! Good work!\n                          </>\n                        )}\n                      </div>\n                    </form>\n                  )}\n\n                  {!master && mode === \"block\" && (\n                    <div className=\"mt-5 d-flex flex-column align-items-center\">\n                      <img\n                        style={{ maxWidth: 300, widht: \"100%\" }}\n                        src={KanbanImg}\n                      />\n                      <h3 className=\"text-center\">Thanks for participation!</h3>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        {master && mode === \"insert\" && this.whiteboard}\n      </>\n    );\n  }\n}\n\nexport default withRouter(Room);\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport RoomCreation from \"./components/RoomCreation\";\nimport Room from \"./components/Room\";\nimport Whiteboard from \"./components/Whiteboard\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/room/:id\" component={Room} />\n        <Route path=\"/whiteboard\" component={Whiteboard} />\n        <Route path=\"/\">\n          <RoomCreation />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./assets/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/master_plan.0b57a90c.svg\";","module.exports = __webpack_public_path__ + \"static/media/kanban.bf4f0317.png\";"],"sourceRoot":""}